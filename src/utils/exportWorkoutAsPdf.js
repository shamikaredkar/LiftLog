import jsPDF from 'jspdf';
import 'jspdf-autotable';

// Helper function to capitalize the first letter of each word
const capitalizeFirstLetterOfEachWord = (str) => {
  return str.replace(/\b\w/g, char => char.toUpperCase());
};

export const exportWorkoutAsPDF = (workoutData, muscleGroups) => {
  const doc = new jsPDF();

  // Set PDF metadata
  doc.setProperties({
    title: 'Workout Plan',
    subject: 'Generated Workout Plan',
    author: 'GymBro',
    keywords: 'workout, fitness, plan',
  });

  // Add title
  doc.setFontSize(18);
  doc.text('Workout Plan', 105, 20, null, null, 'center');

  // Add a line under the title
  doc.setLineWidth(0.5);
  doc.line(20, 25, 190, 25);

  // Prepare the first table: Exercise details
  const exerciseHeaders = [['Exercise', 'Reps', 'Tempo', 'Rest']];
  const exerciseData = workoutData.map(exercise => [
    capitalizeFirstLetterOfEachWord(exercise.name.replace(/_/g, ' ')), // Replace underscores with spaces and capitalize
    exercise.reps,
    exercise.tempo || 'N/A', // Provide default value if tempo is missing
    exercise.rest || 'N/A' // Provide default value if rest is missing
  ]);

  // Generate the first table
  doc.autoTable({
    head: exerciseHeaders,
    body: exerciseData,
    startY: 40,
    styles: { halign: 'center', valign: 'middle' },
    headStyles: { fillColor: [100, 100, 100] },
    columnStyles: {
      0: { halign: 'left' }, // Left align the first column (Exercise names)
    },
  });

  // Prepare the second table: Variants and Substitutes
  const variantHeaders = [['Variant', 'Substitute']];
  const variantData = workoutData.map(exercise => [
    exercise.variant ? capitalizeFirstLetterOfEachWord(exercise.variant.replace(/_/g, ' ')) : 'N/A',
    exercise.substitute ? capitalizeFirstLetterOfEachWord(exercise.substitute.replace(/_/g, ' ')) : 'N/A',
  ]);

  // Generate the second table
  doc.autoTable({
    head: variantHeaders,
    body: variantData,
    startY: doc.previousAutoTable.finalY + 10, // Start below the first table
    styles: { halign: 'center', valign: 'middle' },
    headStyles: { fillColor: [100, 100, 100] },
    columnStyles: {
      0: { halign: 'left' }, // Left align the first column (Variants)
    },
  });

  // Add a footer
  doc.setFontSize(10);
  doc.text('Generated by GymBro', 105, 280, null, null, 'center');

  // Generate the PDF file name based on selected muscle groups
  const pdfFileName = muscleGroups.join('_').replace(/\s+/g, '_') + '_workout_plan.pdf';

  // Save the PDF
  doc.save(pdfFileName);
};
